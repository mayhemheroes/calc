#!/usr/bin/env make
#
# Makefile.local - local Makefile variables
#
# This file is included by Makefile after the last Makefile is set and
# before the first make rule.  This makes this file suitable to override
# Makefile variables.
#
# To replace a Makefile variable, use := symbols.  For example:
#
#	CCWERR:= -Werror

###################################################################
# NOTE: For this and other commended out examples in this file,	  #
# you need to remove the leading '#<whitespaces>' to take effect. #
#								  #
# Comments start with a #-character.				  #
###################################################################

# You can append to an existing Makefile variable using '+=' symbols.
# For example:
#
#	CFLAGS+= -Ofast

# For example, a AddressSanitizer.  You do NOT want to do this by
# by default!  Do this only if you are debugging with libasan:
#
# For Linux gcc version 4.8.5 with libasan-4.8.5-4 you might try:
#
#	CDEBUG:= -O0 -g
#	CFLAGS+= -fsanitize=address -fno-omit-frame-pointer
#	LDFLAGS+= -fsanitize=address -fno-omit-frame-pointer
#	CALC_ENV+= ASAN_OPTIONS=detect_stack_use_after_return=1
#
# For macOS 12.1 with clang version 13.0.0 (clang-1300.0.29.30) you might try:
#
#	CDEBUG:= -O0 -g
#	CFLAGS+= -fsanitize=address -fno-omit-frame-pointer -fsanitize=undefined
#	LDFLAGS+= -fsanitize=address -fno-omit-frame-pointer -fsanitize=undefined
#	CALC_ENV+= ASAN_OPTIONS=detect_stack_use_after_return=1
